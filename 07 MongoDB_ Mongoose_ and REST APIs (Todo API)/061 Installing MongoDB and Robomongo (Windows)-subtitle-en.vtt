WEBVTT

00:00.600 --> 00:01.450
If you're on Windows.

00:01.470 --> 00:06.780
This is the installation video for you if you're on Linux or OS X the last video was for you you can

00:06.780 --> 00:08.880
go ahead and skip this one.

00:08.880 --> 00:11.220
From here on out I am going to assume that you're on Windows.

00:11.220 --> 00:15.090
The goal is to install Mongo D-B on our machines.

00:15.090 --> 00:20.640
This is going to let us create a local Mongo DB database server will be able to connect to that server

00:20.640 --> 00:25.200
with no ass and we'll be able to read and write data to the database.

00:25.210 --> 00:30.990
This is going to be fantastic for the to do API which is going to be responsible for reading and writing

00:31.020 --> 00:34.290
Various to do related information to get started.

00:34.290 --> 00:41.310
We're going to grab the Mongo DB installer by going over to Mongo D-B dot com here we can click that

00:41.310 --> 00:45.150
big green download button and there are quite a few options on this page.

00:45.150 --> 00:48.540
We're using the community server and we are on Windows.

00:48.570 --> 00:52.680
If you go to the version dropdown none of these versions are going to look right for you.

00:52.680 --> 01:00.080
The top one is what you want Windows Server 0 8 are to 64 bit and later with SSL support.

01:00.180 --> 01:02.430
I'm going to go ahead and start that download.

01:02.460 --> 01:03.660
It is slightly big.

01:03.660 --> 01:05.940
Just a tad over 100 megabytes.

01:05.940 --> 01:11.550
So take a moment to start the download pause the video and when your download is done you can go ahead

01:11.580 --> 01:16.440
and click play my installer just finished.

01:16.440 --> 01:18.180
I'm going to go ahead and start it up.

01:18.180 --> 01:23.440
It's one of those basic installers where you click next to a few times and you agree to a license agreement.

01:24.590 --> 01:29.060
Go ahead and click the custom option for a second although we will be following through with the complete

01:29.090 --> 01:29.840
option.

01:29.840 --> 01:33.430
If you click Custom it's going to show you where on your machine it's going to install.

01:33.440 --> 01:34.860
And this is important here.

01:34.970 --> 01:41.970
You can see it's on my C-Drive Program Files Mongo db server then the 3.2 directory.

01:42.050 --> 01:46.490
This is going to be important because we're going to need to navigate into this directory in order to

01:46.490 --> 01:49.500
start up the Mongo DB server.

01:49.520 --> 01:54.710
I am going to go back though and I will be using the complete option which installs everything we need.

01:54.740 --> 01:57.700
Now we can go ahead and actually start to install process.

01:57.710 --> 02:02.270
Usually you have to click yes verifying that you want to install the software I'm going to go ahead

02:02.270 --> 02:05.110
and do that and then we are done.

02:05.300 --> 02:10.320
Now once it's installed we're going to navigate into the command prompt and boot up a server.

02:11.560 --> 02:15.280
The first thing we need to do is navigate into that program files directory.

02:15.400 --> 02:16.510
I'm in the command prompt.

02:16.510 --> 02:21.720
I recommend you use the command prompt and not get bash get bash is not going to work for starting up

02:21.730 --> 02:24.370
the Mongo db server right here.

02:24.370 --> 02:28.960
I'm going to navigate to the root of my machine using CD forward slash and then we can start navigating

02:29.040 --> 02:42.600
to that path CD program files forward slash Mongo DB where DBM capitalized forward slash server capital

02:42.600 --> 02:49.560
S board slash three point two this is the directory where Mongo DB was installed.

02:49.740 --> 02:55.200
I can use Der. to print out the contents of this directory and what we care about is this been and directory

02:55.470 --> 03:02.010
we can navigate into Been using CD bin and print its contents out using d'O and this directory contains

03:02.010 --> 03:06.930
a whole bunch of executables that we're going to use to do things like start up our server and connect

03:06.990 --> 03:07.660
to it.

03:07.680 --> 03:10.510
The first one we're going to run is this Mongo.

03:10.920 --> 03:11.540
File.

03:11.550 --> 03:17.550
This is going to start our local Mongo D-B database before we can go ahead and run in this taxi see

03:17.550 --> 03:21.570
there is one more thing we need to do over in the generic file explorer.

03:21.580 --> 03:26.240
We need to create a directory where all of our data can get stored to do that.

03:26.280 --> 03:34.050
I'm going to put mine in my user directory by going to the C-Drive users Andrew and right here I'm going

03:34.050 --> 03:41.580
to make a new directory and I'm going to call this directory Mongo hyphen in data.

03:41.850 --> 03:46.200
Now the Mongo data directory is where all of our data is actually going to get stored.

03:46.200 --> 03:50.960
This is the path that we need to specify when we run the Mongo D-Conn. Ex-Sea command.

03:50.970 --> 03:56.740
We need to tell Mongo where to store the data over in the terminal we can now start this command.

03:56.820 --> 04:00.540
I'm going to run Mongo D.

04:00.720 --> 04:06.230
X-C passing in as the D-B path argument.

04:06.230 --> 04:08.540
The path to that folder we just created.

04:08.750 --> 04:13.520
In my case it's forward slash users forward slash upper case.

04:13.550 --> 04:17.030
Andrew forward slash Mongo hyphen data.

04:17.030 --> 04:21.440
Now if your user name is different which it obviously is or you put the folder in a different directory

04:21.620 --> 04:26.050
you're going to need to specify the absolute path to the Mongo data folder right here.

04:26.150 --> 04:30.770
Once you have that though you can go ahead and start up the server by running the command.

04:30.770 --> 04:32.750
You're going to get a long list of output.

04:32.750 --> 04:37.720
The only thing you care about is that at the very bottom you see waiting for connections on port 27

04:37.730 --> 04:41.460
0 1 7 if you see that then you are good to go.

04:41.510 --> 04:46.640
And now that the server is up let's connect to it and issue some commands to create and read some data

04:47.000 --> 04:47.750
to do that.

04:47.780 --> 04:52.420
Well we're going to do is open up a second command prompt and navigate into that same bin directory

04:53.060 --> 04:58.430
from the second command prompt we're going to navigate into that same bin directory using CD forward

04:58.430 --> 05:10.610
slash program files Burrard slash Mongo D-B board slash server forward slash 3.2 for Slash Ben from

05:10.610 --> 05:11.180
here.

05:11.180 --> 05:13.730
We're going to run a mongo dot X..

05:13.760 --> 05:16.250
Notice we're not running the Mongo D command.

05:16.250 --> 05:18.110
We're running Mongo dot X-C.

05:18.230 --> 05:23.720
This is going to connect to our local Mongo DB database and it's going to put us in sort of a command

05:23.720 --> 05:25.730
prompt view of our database.

05:25.730 --> 05:29.800
We'll be able to issue various Mongo commands to manipulate the data.

05:29.870 --> 05:34.450
Kind of like we can run node from the terminal to run various javascript statements right inside of

05:34.460 --> 05:36.410
the council when we run this.

05:36.440 --> 05:39.340
We're going to connect it to the database over in the left tab.

05:39.410 --> 05:41.790
You can see that connection excepted shows up.

05:41.810 --> 05:47.900
We do have a new connection in the right hand side now we can run some commands to create and read data.

05:47.900 --> 05:50.860
Now I don't expect you to take away anything from these commands.

05:50.870 --> 05:54.160
We're not going to talk about the ins and outs of Mongo DB just yet.

05:54.260 --> 05:59.000
All I want to do is make sure that when you run them it works as expected to get started.

05:59.000 --> 06:01.400
Let's create a new to do from the council.

06:01.440 --> 06:08.150
This is going to get done via D.B and dot to do's and on this to do's collection.

06:08.240 --> 06:09.830
We're going to call the method.

06:09.830 --> 06:16.760
Insert dot insert and we're going to call insert with one argument and object and that object can have

06:16.760 --> 06:18.830
any properties we want to add to the record.

06:18.860 --> 06:22.050
For example I want to go ahead and set a text property.

06:22.070 --> 06:25.430
This is the thing I actually need to do inside of quotes.

06:25.430 --> 06:33.220
I can go ahead and pick something I'm going to go with create new node of course.

06:33.230 --> 06:38.360
Now when I run this command it's going to actually make the insert into our database and we should get

06:38.360 --> 06:42.640
a right result back with an and inserted property set to one.

06:42.660 --> 06:45.630
This means that one record was inserted.

06:45.650 --> 06:51.300
Now that we have one to do in our database we can go ahead and try to fetch it using DBI dot to do's.

06:51.320 --> 06:58.280
Once again this time instead of calling insert to add a record we're going to call find with no arguments

06:58.280 --> 07:03.180
provided this is going to return every single to do inside of our database.

07:03.290 --> 07:04.870
When I run this command what do we get.

07:04.940 --> 07:09.880
We get an object looking thing where we had a text property set to create new node.

07:09.890 --> 07:17.270
Course we also have an underscore ID property underscore ID as Mongo DB is unique identifier.

07:17.330 --> 07:19.930
And this is the property they use to give your document.

07:19.940 --> 07:26.120
In this case the to do a unique identifier we'll be talking more about underscore ID and about all of

07:26.120 --> 07:28.080
the commands we just ran a little later.

07:28.100 --> 07:31.840
For now we can go ahead and close this down using control-C.

07:31.920 --> 07:38.120
We have successfully disconnected from Mongo and now we can close the second command prompt window.

07:38.300 --> 07:41.280
Before we go there is one more thing I want to do.

07:41.420 --> 07:45.290
We're going to be installing a program called robo Mongo Robo.

07:45.290 --> 07:47.840
Mango is a gooey for Mongo D-B.

07:47.870 --> 07:52.640
It's going to let you connect to your local database as well as real databases which we'll be talking

07:52.640 --> 07:56.990
about later and it'll let you view all the data manipulate it and do anything you could do inside of

07:56.990 --> 07:57.820
a database.

07:58.520 --> 07:59.680
It's really useful.

07:59.720 --> 08:05.120
Sometimes you just need to dive into a database to see exactly what the data looks like in order to

08:05.120 --> 08:06.110
get this started.

08:06.110 --> 08:12.810
Well we're going to do is head over to a new tab and go to robo Mongo dot org.

08:13.970 --> 08:17.440
Here we can grab the installer by going to download.

08:17.990 --> 08:20.840
We're going to download the latest version and I'm on Windows.

08:20.840 --> 08:23.260
I want the installer not the portable version.

08:23.260 --> 08:29.150
So a click that first link this is going to start a really small download just 17 megabytes and we can

08:29.150 --> 08:34.630
click Next a few times through this one to get robo Mongo installed on our machines.

08:35.520 --> 08:37.050
My installers all done.

08:37.050 --> 08:42.600
I'm going to go ahead and start the process confirming installation and clicking next to just a couple

08:42.600 --> 08:43.940
of times.

08:43.980 --> 08:46.870
There's no need to do anything custom inside of the settings.

08:46.920 --> 08:50.280
We're going to run the installer with all of the default settings applied.

08:50.310 --> 08:54.710
Now we can go ahead and actually run the program by finishing the installer.

08:54.930 --> 08:58.790
When you run robo Mongo you're going to be greeted with a connection's screen.

08:58.890 --> 09:03.870
This screen lets you configure all the connections for robo Lango you might have a local connection

09:03.870 --> 09:05.180
for your local database.

09:05.250 --> 09:09.990
You might have a connection to a real you R-AL where your actual production data is stored.

09:10.050 --> 09:11.960
We'll get into all of that later for now.

09:11.970 --> 09:18.390
We're going to go ahead and click Create and by default your address of localhost and Port of 2 7 0

09:18.390 --> 09:20.830
1 7 and do not need to be changed.

09:20.970 --> 09:22.470
All I'm going to do is change the name.

09:22.470 --> 09:24.660
So it's a little easier to identify.

09:24.660 --> 09:28.760
I'll go with local Mongo database

09:32.010 --> 09:32.730
perfect.

09:32.880 --> 09:38.340
Now that we have this in place we can save our new connection and actually connect to the database by

09:38.340 --> 09:39.770
simply double clicking it.

09:39.870 --> 09:42.780
When we do that we get a little tree view of our database.

09:42.780 --> 09:44.520
We have this test database.

09:44.550 --> 09:46.480
This is the one that's created by default.

09:46.530 --> 09:49.850
We can go ahead and expand it then we can expand our collections.

09:49.860 --> 09:52.400
And right here we see the dues collection.

09:52.410 --> 09:55.950
This is the collection we created over inside of the council.

09:55.950 --> 10:00.720
I'm going to go ahead and right click that and go to view documents when I view the documents.

10:00.720 --> 10:03.460
I actually get to view the individual records.

10:03.540 --> 10:10.140
Here I see my underscore id property and my text property that has create new node course sitting right

10:10.140 --> 10:10.740
here.

10:10.950 --> 10:13.570
If you are seeing this then you are done.

10:13.590 --> 10:19.260
It means that you have a local Mango's server running and that also means that you've successfully inserted

10:19.260 --> 10:20.480
data into it.

10:20.490 --> 10:23.190
We were able to use Roboam ongo to view the database.

10:23.250 --> 10:29.800
We were able to use the Mongo DDX executable to start the server up.

10:29.850 --> 10:34.500
Now that we have this in place we can actually create a node application that takes advantage of Mongo

10:34.500 --> 10:37.960
D-B as its database that is all coming up next.

10:37.980 --> 10:39.100
So stay tuned.

10:39.120 --> 10:40.830
I will see you next time
